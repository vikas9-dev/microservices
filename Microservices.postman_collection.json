{
	"info": {
		"_postman_id": "e5753de7-0019-496d-9cd4-016bb78df650",
		"name": "Microservices",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21625099"
	},
	"item": [
		{
			"name": "Accounts",
			"item": [
				{
					"name": "Create Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Hari Om\",\n    \"email\": \"test1@gmail.com\",\n    \"mobileNumber\": \"7488014862\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{peoplebank-accounts}}/api/create",
							"host": [
								"{{peoplebank-accounts}}"
							],
							"path": [
								"api",
								"create"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "Post data",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Manmohan Singh\",\n    \"email\": \"test@gmail.com\",\n    \"mobileNumber\": \"7488014862\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"create"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 19 Mar 2025 02:43:17 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": \"201\",\n    \"statusMsg\": \"Account created successfully\"\n}"
						},
						{
							"name": "Validation Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"M\",\n    \"email\": \"test@gmail.com\",\n    \"mobileNumber\": \"748801486\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 19 Mar 2025 04:14:36 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"mobileNumber\": \"Mobile Number must be 10 digits\",\n    \"name\": \"The length of the customer name should be between 5 and 30 characters\"\n}"
						},
						{
							"name": "Validation",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"M\",\n    \"email\": \"testgmail.com\",\n    \"mobileNumber\": \"748801486\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/create",
									"host": [
										"{{url}}"
									],
									"path": [
										"create"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 19 Mar 2025 04:15:14 GMT"
								},
								{
									"key": "Connection",
									"value": "close"
								}
							],
							"cookie": [],
							"body": "{\n    \"mobileNumber\": \"Mobile Number must be 10 digits\",\n    \"name\": \"The length of the customer name should be between 5 and 30 characters\",\n    \"email\": \"Invalid email address\"\n}"
						}
					]
				},
				{
					"name": "Get Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{peoplebank-accounts}}/api/fetch?mobileNumber=7488014862",
							"host": [
								"{{peoplebank-accounts}}"
							],
							"path": [
								"api",
								"fetch"
							],
							"query": [
								{
									"key": "mobileNumber",
									"value": "7488014862"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "Get data",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{url}}/fetch?mobileNumber=7488014862",
									"host": [
										"{{url}}"
									],
									"path": [
										"fetch"
									],
									"query": [
										{
											"key": "mobileNumber",
											"value": "7488014862"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 19 Mar 2025 02:44:50 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"Manmohan Singh\",\n    \"email\": \"test@gmail.com\",\n    \"mobileNumber\": \"7488014862\",\n    \"accountDTO\": {\n        \"accountNumber\": 817047419,\n        \"accountType\": \"Savings\",\n        \"branchAddress\": \"123 Main Street, New York\"\n    }\n}"
						}
					]
				},
				{
					"name": "Update based on accountNumber",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Hari Om\",\n    \"email\": \"test2@gmail.com\",\n    \"mobileNumber\": \"7488014863\",\n    \"accountDTO\": {\n        \"accountNumber\": 232669939,\n        \"accountType\": \"Current\",\n        \"branchAddress\": \"123 Main Street, New York\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{accounts}}/api/update",
							"host": [
								"{{accounts}}"
							],
							"path": [
								"api",
								"update"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "Update data",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Hari Om\",\n    \"email\": \"test2@gmail.com\",\n    \"mobileNumber\": \"7488014863\",\n    \"accountDTO\": {\n        \"accountNumber\": 555305288,\n        \"accountType\": \"Current\",\n        \"branchAddress\": \"123 Main Street, New York\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/update",
									"host": [
										"{{url}}"
									],
									"path": [
										"update"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 19 Mar 2025 03:12:18 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": \"200\",\n    \"statusMsg\": \"Request processed successfully\"\n}"
						}
					]
				},
				{
					"name": "Delete data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{accounts}}/api/delete?mobileNumber=7488014861",
							"host": [
								"{{accounts}}"
							],
							"path": [
								"api",
								"delete"
							],
							"query": [
								{
									"key": "mobileNumber",
									"value": "7488014861"
								}
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "Delete data",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{url}}/delete?mobileNumber=7488014861",
									"host": [
										"{{url}}"
									],
									"path": [
										"delete"
									],
									"query": [
										{
											"key": "mobileNumber",
											"value": "7488014861"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Wed, 19 Mar 2025 03:22:25 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": \"200\",\n    \"statusMsg\": \"Request processed successfully\"\n}"
						}
					]
				},
				{
					"name": "Get Build Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{peoplebank-accounts}}/api/build-info",
							"host": [
								"{{peoplebank-accounts}}"
							],
							"path": [
								"api",
								"build-info"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get Contact Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{peoplebank-accounts}}/api/contact-info",
							"host": [
								"{{peoplebank-accounts}}"
							],
							"path": [
								"api",
								"contact-info"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get Java Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{accounts}}/api/java-version",
							"host": [
								"{{accounts}}"
							],
							"path": [
								"api",
								"java-version"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Actuator EndPoints",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{accounts}}/actuator",
							"host": [
								"{{accounts}}"
							],
							"path": [
								"actuator"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "actuator",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/actuator",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"actuator"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 28 Mar 2025 03:16:42 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"_links\": {\n        \"self\": {\n            \"href\": \"http://localhost:8080/actuator\",\n            \"templated\": false\n        },\n        \"beans\": {\n            \"href\": \"http://localhost:8080/actuator/beans\",\n            \"templated\": false\n        },\n        \"caches-cache\": {\n            \"href\": \"http://localhost:8080/actuator/caches/{cache}\",\n            \"templated\": true\n        },\n        \"caches\": {\n            \"href\": \"http://localhost:8080/actuator/caches\",\n            \"templated\": false\n        },\n        \"health-path\": {\n            \"href\": \"http://localhost:8080/actuator/health/{*path}\",\n            \"templated\": true\n        },\n        \"health\": {\n            \"href\": \"http://localhost:8080/actuator/health\",\n            \"templated\": false\n        },\n        \"info\": {\n            \"href\": \"http://localhost:8080/actuator/info\",\n            \"templated\": false\n        },\n        \"conditions\": {\n            \"href\": \"http://localhost:8080/actuator/conditions\",\n            \"templated\": false\n        },\n        \"configprops\": {\n            \"href\": \"http://localhost:8080/actuator/configprops\",\n            \"templated\": false\n        },\n        \"configprops-prefix\": {\n            \"href\": \"http://localhost:8080/actuator/configprops/{prefix}\",\n            \"templated\": true\n        },\n        \"env\": {\n            \"href\": \"http://localhost:8080/actuator/env\",\n            \"templated\": false\n        },\n        \"env-toMatch\": {\n            \"href\": \"http://localhost:8080/actuator/env/{toMatch}\",\n            \"templated\": true\n        },\n        \"loggers\": {\n            \"href\": \"http://localhost:8080/actuator/loggers\",\n            \"templated\": false\n        },\n        \"loggers-name\": {\n            \"href\": \"http://localhost:8080/actuator/loggers/{name}\",\n            \"templated\": true\n        },\n        \"heapdump\": {\n            \"href\": \"http://localhost:8080/actuator/heapdump\",\n            \"templated\": false\n        },\n        \"threaddump\": {\n            \"href\": \"http://localhost:8080/actuator/threaddump\",\n            \"templated\": false\n        },\n        \"metrics\": {\n            \"href\": \"http://localhost:8080/actuator/metrics\",\n            \"templated\": false\n        },\n        \"metrics-requiredMetricName\": {\n            \"href\": \"http://localhost:8080/actuator/metrics/{requiredMetricName}\",\n            \"templated\": true\n        },\n        \"sbom-id\": {\n            \"href\": \"http://localhost:8080/actuator/sbom/{id}\",\n            \"templated\": true\n        },\n        \"sbom\": {\n            \"href\": \"http://localhost:8080/actuator/sbom\",\n            \"templated\": false\n        },\n        \"scheduledtasks\": {\n            \"href\": \"http://localhost:8080/actuator/scheduledtasks\",\n            \"templated\": false\n        },\n        \"mappings\": {\n            \"href\": \"http://localhost:8080/actuator/mappings\",\n            \"templated\": false\n        },\n        \"refresh\": {\n            \"href\": \"http://localhost:8080/actuator/refresh\",\n            \"templated\": false\n        },\n        \"features\": {\n            \"href\": \"http://localhost:8080/actuator/features\",\n            \"templated\": false\n        }\n    }\n}"
						}
					]
				},
				{
					"name": "Actuator Refresh",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{accounts}}/actuator/refresh",
							"host": [
								"{{accounts}}"
							],
							"path": [
								"actuator",
								"refresh"
							]
						}
					},
					"response": [
						{
							"name": "Actuator Refresh",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:8080/actuator/refresh",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"actuator",
										"refresh"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 28 Mar 2025 03:18:11 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "[\n    \"config.client.version\",\n    \"accounts.message\"\n]"
						}
					]
				},
				{
					"name": "Bus-refresh",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{accounts}}/actuator/busrefresh",
							"host": [
								"{{accounts}}"
							],
							"path": [
								"actuator",
								"busrefresh"
							]
						}
					},
					"response": []
				},
				{
					"name": "Shutdown",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{accounts}}/actuator/shutdown",
							"host": [
								"{{accounts}}"
							],
							"path": [
								"actuator",
								"shutdown"
							]
						}
					},
					"response": [
						{
							"name": "shutdown",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{accounts}}/actuator/shutdown",
									"host": [
										"{{accounts}}"
									],
									"path": [
										"actuator",
										"shutdown"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sat, 05 Apr 2025 02:56:22 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Shutting down, bye...\"\n}"
						}
					]
				},
				{
					"name": "Get Customer All Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{peoplebank-accounts}}/api/fetchCustomerDetails?mobileNumber=7488014862",
							"host": [
								"{{peoplebank-accounts}}"
							],
							"path": [
								"api",
								"fetchCustomerDetails"
							],
							"query": [
								{
									"key": "mobileNumber",
									"value": "7488014862"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "CircuitBreaker",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{peoplebank-accounts}}/actuator/circuitbreakers",
							"host": [
								"{{peoplebank-accounts}}"
							],
							"path": [
								"actuator",
								"circuitbreakers"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "CircuitBreaker Events",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{peoplebank-accounts}}/actuator/circuitbreakerevents",
							"host": [
								"{{peoplebank-accounts}}"
							],
							"path": [
								"actuator",
								"circuitbreakerevents"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "Loans",
			"item": [
				{
					"name": "Post data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{peoplebank-loans}}/api/create?mobileNumber=7488014862",
							"host": [
								"{{peoplebank-loans}}"
							],
							"path": [
								"api",
								"create"
							],
							"query": [
								{
									"key": "mobileNumber",
									"value": "7488014862"
								}
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "Post data",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{loans}}/create?mobileNumber=7488014862",
									"host": [
										"{{loans}}"
									],
									"path": [
										"create"
									],
									"query": [
										{
											"key": "mobileNumber",
											"value": "7488014862"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 23 Mar 2025 06:43:34 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": \"201\",\n    \"statusMsg\": \"Loan created successfully\"\n}"
						}
					]
				},
				{
					"name": "Get data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{loans}}/api/fetch?mobileNumber=7488014862",
							"host": [
								"{{loans}}"
							],
							"path": [
								"api",
								"fetch"
							],
							"query": [
								{
									"key": "mobileNumber",
									"value": "7488014862"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "Get data",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{loans}}/fetch?mobileNumber=7488014862",
									"host": [
										"{{loans}}"
									],
									"path": [
										"fetch"
									],
									"query": [
										{
											"key": "mobileNumber",
											"value": "7488014862"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 23 Mar 2025 06:43:36 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"mobileNumber\": \"7488014862\",\n    \"loanNumber\": \"288330710413\",\n    \"loanType\": \"Home Loan\",\n    \"totalLoan\": 100000,\n    \"amountPaid\": 0,\n    \"outstandingAmount\": 100000\n}"
						},
						{
							"name": "Exception",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{loans}}/fetch?mobileNumber=7488014861",
									"host": [
										"{{loans}}"
									],
									"path": [
										"fetch"
									],
									"query": [
										{
											"key": "mobileNumber",
											"value": "7488014861"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 23 Mar 2025 06:50:44 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"apiPath\": \"uri=/api/fetch\",\n    \"errorCode\": \"NOT_FOUND\",\n    \"errorMessage\": \"Loan not found with given input data mobileNumber : '7488014861'\",\n    \"errorTime\": \"2025-03-23T12:20:44.8916943\"\n}"
						}
					]
				},
				{
					"name": "Update data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobileNumber\": \"7488014862\",\n    \"loanNumber\": \"288330710414\",\n    \"loanType\": \"Personal Loan\",\n    \"totalLoan\": 500000,\n    \"amountPaid\": 200000,\n    \"outstandingAmount\": 300000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{loans}}/api/update?mobileNumber=7488014862",
							"host": [
								"{{loans}}"
							],
							"path": [
								"api",
								"update"
							],
							"query": [
								{
									"key": "mobileNumber",
									"value": "7488014862"
								}
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "Update data",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobileNumber\": \"7488014862\",\n    \"loanNumber\": \"288330710414\",\n    \"loanType\": \"Personal Loan\",\n    \"totalLoan\": 500000,\n    \"amountPaid\": 200000,\n    \"outstandingAmount\": 300000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{loans}}/update?mobileNumber=7488014862",
									"host": [
										"{{loans}}"
									],
									"path": [
										"update"
									],
									"query": [
										{
											"key": "mobileNumber",
											"value": "7488014862"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 23 Mar 2025 06:44:13 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": \"200\",\n    \"statusMsg\": \"Request processed successfully\"\n}"
						}
					]
				},
				{
					"name": "Delete data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{loans}}/api/delete?mobileNumber=7488014862",
							"host": [
								"{{loans}}"
							],
							"path": [
								"api",
								"delete"
							],
							"query": [
								{
									"key": "mobileNumber",
									"value": "7488014862"
								}
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "Delete data",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{loans}}/delete?mobileNumber=7488014862",
									"host": [
										"{{loans}}"
									],
									"path": [
										"delete"
									],
									"query": [
										{
											"key": "mobileNumber",
											"value": "7488014862"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 23 Mar 2025 06:45:01 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": \"200\",\n    \"statusMsg\": \"Request processed successfully\"\n}"
						}
					]
				},
				{
					"name": "Get Build Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{loans}}/api/build-info",
							"host": [
								"{{loans}}"
							],
							"path": [
								"api",
								"build-info"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get Contact Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{peoplebank-loans}}/api/contact-info",
							"host": [
								"{{peoplebank-loans}}"
							],
							"path": [
								"api",
								"contact-info"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get Java Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{loans}}/api/java-version",
							"host": [
								"{{loans}}"
							],
							"path": [
								"api",
								"java-version"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Shutdown",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{loans}}/actuator/shutdown",
							"host": [
								"{{loans}}"
							],
							"path": [
								"actuator",
								"shutdown"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cards",
			"item": [
				{
					"name": "Post data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{peoplebank-cards}}/api/create?mobileNumber=7488014862",
							"host": [
								"{{peoplebank-cards}}"
							],
							"path": [
								"api",
								"create"
							],
							"query": [
								{
									"key": "mobileNumber",
									"value": "7488014862"
								}
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "Post data",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cards}}/create?mobileNumber=7488014862",
									"host": [
										"{{cards}}"
									],
									"path": [
										"create"
									],
									"query": [
										{
											"key": "mobileNumber",
											"value": "7488014862"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 23 Mar 2025 07:53:54 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": \"201\",\n    \"statusMsg\": \"Card created successfully\"\n}"
						}
					]
				},
				{
					"name": "Get data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{cards}}/api/fetch?mobileNumber=7488014862",
							"host": [
								"{{cards}}"
							],
							"path": [
								"api",
								"fetch"
							],
							"query": [
								{
									"key": "mobileNumber",
									"value": "7488014862"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "Get data",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{cards}}/fetch?mobileNumber=7488014862",
									"host": [
										"{{cards}}"
									],
									"path": [
										"fetch"
									],
									"query": [
										{
											"key": "mobileNumber",
											"value": "7488014862"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 23 Mar 2025 07:54:18 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"mobileNumber\": \"7488014862\",\n    \"cardNumber\": \"100702920355\",\n    \"cardType\": \"Credit Card\",\n    \"totalLimit\": 100000,\n    \"amountUsed\": 0,\n    \"availableAmount\": 100000\n}"
						},
						{
							"name": "Exception",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{cards}}/fetch?mobileNumber=7488014861",
									"host": [
										"{{cards}}"
									],
									"path": [
										"fetch"
									],
									"query": [
										{
											"key": "mobileNumber",
											"value": "7488014861"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 23 Mar 2025 07:54:41 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"apiPath\": \"uri=/api/fetch\",\n    \"errorCode\": \"NOT_FOUND\",\n    \"errorMessage\": \"Card not found with given input data mobileNumber : '7488014861'\",\n    \"errorTime\": \"2025-03-23T13:24:41.7213695\"\n}"
						}
					]
				},
				{
					"name": "Update data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"mobileNumber\": \"7488014862\",\n    \"cardNumber\": \"10070292035\",\n    \"cardType\": \"Platinum Credit Card\",\n    \"totalLimit\": 200000,\n    \"amountUsed\": 50000,\n    \"availableAmount\": 150000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cards}}/api/update",
							"host": [
								"{{cards}}"
							],
							"path": [
								"api",
								"update"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "Update data",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobileNumber\": \"7488014862\",\n    \"cardNumber\": \"100702920355\",\n    \"cardType\": \"Platinum Credit Card\",\n    \"totalLimit\": 200000,\n    \"amountUsed\": 50000,\n    \"availableAmount\": 150000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cards}}/update",
									"host": [
										"{{cards}}"
									],
									"path": [
										"update"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 23 Mar 2025 07:56:58 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": \"200\",\n    \"statusMsg\": \"Request processed successfully\"\n}"
						},
						{
							"name": "Exception",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"mobileNumber\": \"7488014862\",\n    \"cardNumber\": \"100702920356\",\n    \"cardType\": \"Platinum Credit Card\",\n    \"totalLimit\": 200000,\n    \"amountUsed\": 50000,\n    \"availableAmount\": 150000\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cards}}/update",
									"host": [
										"{{cards}}"
									],
									"path": [
										"update"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 23 Mar 2025 07:57:18 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"apiPath\": \"uri=/api/update\",\n    \"errorCode\": \"NOT_FOUND\",\n    \"errorMessage\": \"Card not found with given input data CardNumber : '100702920356'\",\n    \"errorTime\": \"2025-03-23T13:27:18.0504113\"\n}"
						}
					]
				},
				{
					"name": "Delete data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{cards}}/api/delete?mobileNumber=7488014862",
							"host": [
								"{{cards}}"
							],
							"path": [
								"api",
								"delete"
							],
							"query": [
								{
									"key": "mobileNumber",
									"value": "7488014862"
								}
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "Delete data",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cards}}/delete?mobileNumber=7488014862",
									"host": [
										"{{cards}}"
									],
									"path": [
										"delete"
									],
									"query": [
										{
											"key": "mobileNumber",
											"value": "7488014862"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 23 Mar 2025 07:57:48 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"statusCode\": \"200\",\n    \"statusMsg\": \"Request processed successfully\"\n}"
						},
						{
							"name": "Exception",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{cards}}/delete?mobileNumber=7488014862",
									"host": [
										"{{cards}}"
									],
									"path": [
										"delete"
									],
									"query": [
										{
											"key": "mobileNumber",
											"value": "7488014862"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 23 Mar 2025 07:57:55 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"apiPath\": \"uri=/api/delete\",\n    \"errorCode\": \"NOT_FOUND\",\n    \"errorMessage\": \"Card not found with given input data mobileNumber : '7488014862'\",\n    \"errorTime\": \"2025-03-23T13:27:55.9929483\"\n}"
						}
					]
				},
				{
					"name": "Get Build Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{cards}}/api/build-info",
							"host": [
								"{{cards}}"
							],
							"path": [
								"api",
								"build-info"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get Contact Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{peoplebank-cards}}/api/contact-info",
							"host": [
								"{{peoplebank-cards}}"
							],
							"path": [
								"api",
								"contact-info"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Get Java Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{cards}}/api/java-version",
							"host": [
								"{{cards}}"
							],
							"path": [
								"api",
								"java-version"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "Shutdown",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{cards}}/actuator/shutdown",
							"host": [
								"{{cards}}"
							],
							"path": [
								"actuator",
								"shutdown"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Config Server",
			"item": [
				{
					"name": "Accounts - Default",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{config-server}}/accounts/default",
							"host": [
								"{{config-server}}"
							],
							"path": [
								"accounts",
								"default"
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{config-server}}/accounts/default",
									"host": [
										"{{config-server}}"
									],
									"path": [
										"accounts",
										"default"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 28 Mar 2025 02:28:15 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"accounts\",\n    \"profiles\": [\n        \"default\"\n    ],\n    \"label\": null,\n    \"version\": \"cae6454b7c4c93193256197382461fc8c808f747\",\n    \"state\": \"\",\n    \"propertySources\": [\n        {\n            \"name\": \"https://github.com/vikas9-dev/peoplebank-config.git/accounts.yml\",\n            \"source\": {\n                \"build.version\": \"3.0\",\n                \"accounts.message\": \"Accounts Microservice - Local\",\n                \"accounts.contactDetails.name\": \"Accounts Microservice - Developer\",\n                \"accounts.contactDetails.email\": \"0V7ZD@example.com\",\n                \"accounts.onCallSupport[0]\": \"(555) 555-5555\",\n                \"accounts.onCallSupport[1]\": \"(555) 555-5556\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "EurekaServer - Default",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{config-server}}/eurekaserver/default",
							"host": [
								"{{config-server}}"
							],
							"path": [
								"eurekaserver",
								"default"
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{config-server}}/accounts/default",
									"host": [
										"{{config-server}}"
									],
									"path": [
										"accounts",
										"default"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 28 Mar 2025 02:28:15 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"accounts\",\n    \"profiles\": [\n        \"default\"\n    ],\n    \"label\": null,\n    \"version\": \"cae6454b7c4c93193256197382461fc8c808f747\",\n    \"state\": \"\",\n    \"propertySources\": [\n        {\n            \"name\": \"https://github.com/vikas9-dev/peoplebank-config.git/accounts.yml\",\n            \"source\": {\n                \"build.version\": \"3.0\",\n                \"accounts.message\": \"Accounts Microservice - Local\",\n                \"accounts.contactDetails.name\": \"Accounts Microservice - Developer\",\n                \"accounts.contactDetails.email\": \"0V7ZD@example.com\",\n                \"accounts.onCallSupport[0]\": \"(555) 555-5555\",\n                \"accounts.onCallSupport[1]\": \"(555) 555-5556\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Accounts - Prod",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{config-server}}/accounts/default",
							"host": [
								"{{config-server}}"
							],
							"path": [
								"accounts",
								"default"
							]
						}
					},
					"response": [
						{
							"name": "Accounts - Prod - GitHub",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{config-server}}/accounts/prod",
									"host": [
										"{{config-server}}"
									],
									"path": [
										"accounts",
										"prod"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 28 Mar 2025 02:29:20 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"accounts\",\n    \"profiles\": [\n        \"prod\"\n    ],\n    \"label\": null,\n    \"version\": \"cae6454b7c4c93193256197382461fc8c808f747\",\n    \"state\": \"\",\n    \"propertySources\": [\n        {\n            \"name\": \"https://github.com/vikas9-dev/peoplebank-config.git/accounts-prod.yml\",\n            \"source\": {\n                \"build.version\": \"1.0\",\n                \"accounts.message\": \"Accounts Microservice - Production\",\n                \"accounts.contactDetails.name\": \"Accounts Microservice - Developer\",\n                \"accounts.contactDetails.email\": \"0V7ZD@example.com\",\n                \"accounts.onCallSupport[0]\": \"(555) 555-5555\",\n                \"accounts.onCallSupport[1]\": \"(555) 555-5556\"\n            }\n        },\n        {\n            \"name\": \"https://github.com/vikas9-dev/peoplebank-config.git/accounts.yml\",\n            \"source\": {\n                \"build.version\": \"3.0\",\n                \"accounts.message\": \"Accounts Microservice - Local\",\n                \"accounts.contactDetails.name\": \"Accounts Microservice - Developer\",\n                \"accounts.contactDetails.email\": \"0V7ZD@example.com\",\n                \"accounts.onCallSupport[0]\": \"(555) 555-5555\",\n                \"accounts.onCallSupport[1]\": \"(555) 555-5556\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Accounts - QA",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{config-server}}/accounts/default",
							"host": [
								"{{config-server}}"
							],
							"path": [
								"accounts",
								"default"
							]
						}
					},
					"response": [
						{
							"name": "Accounts - QA",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{config-server}}/accounts/qa",
									"host": [
										"{{config-server}}"
									],
									"path": [
										"accounts",
										"qa"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Fri, 28 Mar 2025 02:28:51 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"accounts\",\n    \"profiles\": [\n        \"qa\"\n    ],\n    \"label\": null,\n    \"version\": \"cae6454b7c4c93193256197382461fc8c808f747\",\n    \"state\": \"\",\n    \"propertySources\": [\n        {\n            \"name\": \"https://github.com/vikas9-dev/peoplebank-config.git/accounts-qa.yml\",\n            \"source\": {\n                \"build.version\": \"2.0\",\n                \"accounts.message\": \"Accounts Microservice - QA\",\n                \"accounts.contactDetails.name\": \"Accounts Microservice - Developer\",\n                \"accounts.contactDetails.email\": \"0V7ZD@example.com\",\n                \"accounts.onCallSupport[0]\": \"(555) 555-5555\",\n                \"accounts.onCallSupport[1]\": \"(555) 555-5556\"\n            }\n        },\n        {\n            \"name\": \"https://github.com/vikas9-dev/peoplebank-config.git/accounts.yml\",\n            \"source\": {\n                \"build.version\": \"3.0\",\n                \"accounts.message\": \"Accounts Microservice - Local\",\n                \"accounts.contactDetails.name\": \"Accounts Microservice - Developer\",\n                \"accounts.contactDetails.email\": \"0V7ZD@example.com\",\n                \"accounts.onCallSupport[0]\": \"(555) 555-5555\",\n                \"accounts.onCallSupport[1]\": \"(555) 555-5556\"\n            }\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{config-server}}/actuator/health",
							"host": [
								"{{config-server}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": [
						{
							"name": "Health",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{config-server}}/actuator/health",
									"host": [
										"{{config-server}}"
									],
									"path": [
										"actuator",
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 31 Mar 2025 17:31:54 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"UP\",\n    \"groups\": [\n        \"liveness\",\n        \"readiness\"\n    ]\n}"
						}
					]
				},
				{
					"name": "liveness",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{config-server}}/actuator/health/liveness",
							"host": [
								"{{config-server}}"
							],
							"path": [
								"actuator",
								"health",
								"liveness"
							]
						}
					},
					"response": [
						{
							"name": "liveness",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{config-server}}/actuator/health/liveness",
									"host": [
										"{{config-server}}"
									],
									"path": [
										"actuator",
										"health",
										"liveness"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 31 Mar 2025 17:33:10 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"UP\"\n}"
						}
					]
				},
				{
					"name": "readiness",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{config-server}}/actuator/health/readiness",
							"host": [
								"{{config-server}}"
							],
							"path": [
								"actuator",
								"health",
								"readiness"
							]
						}
					},
					"response": [
						{
							"name": "readiness",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{config-server}}/actuator/health/readiness",
									"host": [
										"{{config-server}}"
									],
									"path": [
										"actuator",
										"health",
										"readiness"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.spring-boot.actuator.v3+json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 31 Mar 2025 17:33:35 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"UP\"\n}"
						}
					]
				},
				{
					"name": "Encrypt",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "0V7ZD@example.com",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{config-server}}/encrypt",
							"host": [
								"{{config-server}}"
							],
							"path": [
								"encrypt"
							]
						}
					},
					"response": [
						{
							"name": "Encrypt",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "0V7ZD@example.com",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{config-server}}/encrypt",
									"host": [
										"{{config-server}}"
									],
									"path": [
										"encrypt"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain;charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "96"
								},
								{
									"key": "Date",
									"value": "Fri, 28 Mar 2025 02:44:56 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "278fb8eefe1cfdec12cddde47fd474627fc4ace6fb9e546eb229afd3cd739fd90d1485033596d23b9b87673175e0b431"
						}
					]
				},
				{
					"name": "Decrypt",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "278fb8eefe1cfdec12cddde47fd474627fc4ace6fb9e546eb229afd3cd739fd90d1485033596d23b9b87673175e0b431",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{config-server}}/decrypt",
							"host": [
								"{{config-server}}"
							],
							"path": [
								"decrypt"
							]
						}
					},
					"response": [
						{
							"name": "Decrypt",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "278fb8eefe1cfdec12cddde47fd474627fc4ace6fb9e546eb229afd3cd739fd90d1485033596d23b9b87673175e0b431",
									"options": {
										"raw": {
											"language": "text"
										}
									}
								},
								"url": {
									"raw": "{{config-server}}/decrypt",
									"host": [
										"{{config-server}}"
									],
									"path": [
										"decrypt"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain;charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "17"
								},
								{
									"key": "Date",
									"value": "Fri, 28 Mar 2025 02:48:13 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "0V7ZD@example.com"
						}
					]
				}
			]
		},
		{
			"name": "Eureka Server",
			"item": [
				{
					"name": "Apps",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{eurekaserver}}/eureka/apps",
							"host": [
								"{{eurekaserver}}"
							],
							"path": [
								"eureka",
								"apps"
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{eurekaserver}}/eureka/apps",
									"host": [
										"{{eurekaserver}}"
									],
									"path": [
										"eureka",
										"apps"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "688"
								},
								{
									"key": "Date",
									"value": "Sat, 05 Apr 2025 02:42:36 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"applications\": {\n        \"versions__delta\": \"1\",\n        \"apps__hashcode\": \"UP_3_\",\n        \"application\": [\n            {\n                \"name\": \"LOANS\",\n                \"instance\": [\n                    {\n                        \"instanceId\": \"192.168.1.9:loans:8090\",\n                        \"hostName\": \"192.168.1.9\",\n                        \"app\": \"LOANS\",\n                        \"ipAddr\": \"192.168.1.9\",\n                        \"status\": \"UP\",\n                        \"overriddenStatus\": \"UNKNOWN\",\n                        \"port\": {\n                            \"$\": 8090,\n                            \"@enabled\": \"true\"\n                        },\n                        \"securePort\": {\n                            \"$\": 443,\n                            \"@enabled\": \"false\"\n                        },\n                        \"countryId\": 1,\n                        \"dataCenterInfo\": {\n                            \"@class\": \"com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo\",\n                            \"name\": \"MyOwn\"\n                        },\n                        \"leaseInfo\": {\n                            \"renewalIntervalInSecs\": 30,\n                            \"durationInSecs\": 90,\n                            \"registrationTimestamp\": 1743820479102,\n                            \"lastRenewalTimestamp\": 1743820929380,\n                            \"evictionTimestamp\": 0,\n                            \"serviceUpTimestamp\": 1743820479102\n                        },\n                        \"metadata\": {\n                            \"management.port\": \"8090\"\n                        },\n                        \"homePageUrl\": \"http://192.168.1.9:8090/\",\n                        \"statusPageUrl\": \"http://192.168.1.9:8090/actuator/info\",\n                        \"healthCheckUrl\": \"http://192.168.1.9:8090/actuator/health\",\n                        \"vipAddress\": \"loans\",\n                        \"secureVipAddress\": \"loans\",\n                        \"isCoordinatingDiscoveryServer\": \"false\",\n                        \"lastUpdatedTimestamp\": \"1743820479102\",\n                        \"lastDirtyTimestamp\": \"1743820478996\",\n                        \"actionType\": \"ADDED\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"ACCOUNTS\",\n                \"instance\": [\n                    {\n                        \"instanceId\": \"192.168.1.9:accounts:8080\",\n                        \"hostName\": \"192.168.1.9\",\n                        \"app\": \"ACCOUNTS\",\n                        \"ipAddr\": \"192.168.1.9\",\n                        \"status\": \"UP\",\n                        \"overriddenStatus\": \"UNKNOWN\",\n                        \"port\": {\n                            \"$\": 8080,\n                            \"@enabled\": \"true\"\n                        },\n                        \"securePort\": {\n                            \"$\": 443,\n                            \"@enabled\": \"false\"\n                        },\n                        \"countryId\": 1,\n                        \"dataCenterInfo\": {\n                            \"@class\": \"com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo\",\n                            \"name\": \"MyOwn\"\n                        },\n                        \"leaseInfo\": {\n                            \"renewalIntervalInSecs\": 30,\n                            \"durationInSecs\": 90,\n                            \"registrationTimestamp\": 1743819804429,\n                            \"lastRenewalTimestamp\": 1743820945505,\n                            \"evictionTimestamp\": 0,\n                            \"serviceUpTimestamp\": 1743819804430\n                        },\n                        \"metadata\": {\n                            \"management.port\": \"8080\"\n                        },\n                        \"homePageUrl\": \"http://192.168.1.9:8080/\",\n                        \"statusPageUrl\": \"http://192.168.1.9:8080/actuator/info\",\n                        \"healthCheckUrl\": \"http://192.168.1.9:8080/actuator/health\",\n                        \"vipAddress\": \"accounts\",\n                        \"secureVipAddress\": \"accounts\",\n                        \"isCoordinatingDiscoveryServer\": \"false\",\n                        \"lastUpdatedTimestamp\": \"1743819804430\",\n                        \"lastDirtyTimestamp\": \"1743819804268\",\n                        \"actionType\": \"ADDED\"\n                    }\n                ]\n            },\n            {\n                \"name\": \"CARDS\",\n                \"instance\": [\n                    {\n                        \"instanceId\": \"192.168.1.9:cards:9000\",\n                        \"hostName\": \"192.168.1.9\",\n                        \"app\": \"CARDS\",\n                        \"ipAddr\": \"192.168.1.9\",\n                        \"status\": \"UP\",\n                        \"overriddenStatus\": \"UNKNOWN\",\n                        \"port\": {\n                            \"$\": 9000,\n                            \"@enabled\": \"true\"\n                        },\n                        \"securePort\": {\n                            \"$\": 443,\n                            \"@enabled\": \"false\"\n                        },\n                        \"countryId\": 1,\n                        \"dataCenterInfo\": {\n                            \"@class\": \"com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo\",\n                            \"name\": \"MyOwn\"\n                        },\n                        \"leaseInfo\": {\n                            \"renewalIntervalInSecs\": 30,\n                            \"durationInSecs\": 90,\n                            \"registrationTimestamp\": 1743820474306,\n                            \"lastRenewalTimestamp\": 1743820924525,\n                            \"evictionTimestamp\": 0,\n                            \"serviceUpTimestamp\": 1743820474306\n                        },\n                        \"metadata\": {\n                            \"management.port\": \"9000\"\n                        },\n                        \"homePageUrl\": \"http://192.168.1.9:9000/\",\n                        \"statusPageUrl\": \"http://192.168.1.9:9000/actuator/info\",\n                        \"healthCheckUrl\": \"http://192.168.1.9:9000/actuator/health\",\n                        \"vipAddress\": \"cards\",\n                        \"secureVipAddress\": \"cards\",\n                        \"isCoordinatingDiscoveryServer\": \"false\",\n                        \"lastUpdatedTimestamp\": \"1743820474306\",\n                        \"lastDirtyTimestamp\": \"1743820474177\",\n                        \"actionType\": \"ADDED\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Accounts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{eurekaserver}}/eureka/apps",
							"host": [
								"{{eurekaserver}}"
							],
							"path": [
								"eureka",
								"apps"
							]
						}
					},
					"response": [
						{
							"name": "Accounts",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{eurekaserver}}/eureka/apps/accounts",
									"host": [
										"{{eurekaserver}}"
									],
									"path": [
										"eureka",
										"apps",
										"accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Content-Length",
									"value": "969"
								},
								{
									"key": "Date",
									"value": "Sat, 05 Apr 2025 02:44:58 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"application\": {\n        \"name\": \"ACCOUNTS\",\n        \"instance\": [\n            {\n                \"instanceId\": \"192.168.1.9:accounts:8080\",\n                \"hostName\": \"192.168.1.9\",\n                \"app\": \"ACCOUNTS\",\n                \"ipAddr\": \"192.168.1.9\",\n                \"status\": \"UP\",\n                \"overriddenStatus\": \"UNKNOWN\",\n                \"port\": {\n                    \"$\": 8080,\n                    \"@enabled\": \"true\"\n                },\n                \"securePort\": {\n                    \"$\": 443,\n                    \"@enabled\": \"false\"\n                },\n                \"countryId\": 1,\n                \"dataCenterInfo\": {\n                    \"@class\": \"com.netflix.appinfo.InstanceInfo$DefaultDataCenterInfo\",\n                    \"name\": \"MyOwn\"\n                },\n                \"leaseInfo\": {\n                    \"renewalIntervalInSecs\": 30,\n                    \"durationInSecs\": 90,\n                    \"registrationTimestamp\": 1743819804429,\n                    \"lastRenewalTimestamp\": 1743821185753,\n                    \"evictionTimestamp\": 0,\n                    \"serviceUpTimestamp\": 1743819804430\n                },\n                \"metadata\": {\n                    \"management.port\": \"8080\"\n                },\n                \"homePageUrl\": \"http://192.168.1.9:8080/\",\n                \"statusPageUrl\": \"http://192.168.1.9:8080/actuator/info\",\n                \"healthCheckUrl\": \"http://192.168.1.9:8080/actuator/health\",\n                \"vipAddress\": \"accounts\",\n                \"secureVipAddress\": \"accounts\",\n                \"isCoordinatingDiscoveryServer\": \"false\",\n                \"lastUpdatedTimestamp\": \"1743819804430\",\n                \"lastDirtyTimestamp\": \"1743819804268\",\n                \"actionType\": \"ADDED\"\n            }\n        ]\n    }\n}"
						}
					]
				}
			]
		},
		{
			"name": "Gateway",
			"item": [
				{
					"name": "Routes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway}}/actuator/gateway/routes",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"actuator",
								"gateway",
								"routes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Circuitbreakers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway}}/actuator/circuitbreakers",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"actuator",
								"circuitbreakers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Circuitbreakers Events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{gateway}}/actuator/circuitbreakerevents?name=accountCircuitBreaker",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"actuator",
								"circuitbreakerevents"
							],
							"query": [
								{
									"key": "name",
									"value": "accountCircuitBreaker"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}